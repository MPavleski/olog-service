<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <servlet>
        <servlet-name>ServletAdaptor</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <listener>
        <!-- Releases all Derby resources when the webapp is undeployed.  -->
        <!-- See https://issues.apache.org/jira/browse/JCR-1301           -->
        <listener-class>
            org.apache.jackrabbit.j2ee.DerbyShutdown
        </listener-class>
    </listener>
    <listener>
  	<listener-class>
  		edu.msu.nscl.olog.OlogContextListener
  	</listener-class>
  </listener>

    <!-- ====================================================================== -->
    <!-- R E P O S I T O R Y   S T A R T U P  S E R V L E T                     -->
    <!-- ====================================================================== -->
    <servlet>
        <servlet-name>RepositoryStartup</servlet-name>
        <servlet-class>org.apache.jackrabbit.j2ee.RepositoryStartupServlet</servlet-class>

        <init-param>
            <param-name>bootstrap-config</param-name>
            <param-value>/WEB-INF/bootstrap.properties</param-value>
        </init-param>
        <init-param>
            <param-name>repository-config</param-name>
            <param-value>/WEB-INF/repository.xml</param-value>
        </init-param>
        <init-param>
            <param-name>repository-home</param-name>
            <param-value>jackrabbit</param-value>
        </init-param>
        <init-param>
            <param-name>olog-repository</param-name>
            <param-value>jackrabbit.repository</param-value>
        </init-param>

        <!--
            the following 3 parameters deal with registering the repository to
            a RMI registry. if all parameters are omitted, the repository will
            not be registered.
        -->
        <!--
        <init-param>
            <param-name>rmi-port</param-name>
            <param-value>0</param-value>
            <description>
                The RMI port for registering the repository in the RMI Registry.
                If equals 0, the default port is used.
            </description>
        </init-param>
        <init-param>
            <param-name>rmi-host</param-name>
            <param-value>localhost</param-value>
            <description>
                The RMI host for registering the repository in the RMI Registry.
                If equals "" or missing, the default host is used.
            </description>
        </init-param>
        <init-param>
            <param-name>rmi-uri</param-name>
            <param-value></param-value>
            <description>
                The RMI uri for registering the repository in the RMI Registry.
                If missing, the uri is composed using the other rmi parameters
                and will have the format: //{rmi-host}:{rmi-port}/{repository-name}
            </description>
        </init-param>
        -->
        <!--
            JNDI environment variables for creating the initial context
            (all init parameters starting with java.naming.* will be added to the initial context environment).
        -->
        <!--
        <init-param>
            <param-name>java.naming.provider.url</param-name>
            <param-value>http://www.apache.org/jackrabbit</param-value>
        </init-param>
        <init-param>
            <param-name>java.naming.factory.initial</param-name>
            <param-value>org.apache.jackrabbit.core.jndi.provider.DummyInitialContextFactory</param-value>
        </init-param>
        -->
        <load-on-startup>2</load-on-startup>
    </servlet>
    <!-- ====================================================================== -->
    <!-- R E P O S I T O R Y   S E R V L E T                                    -->
    <!-- ====================================================================== -->
    <servlet>
        <servlet-name>Repository</servlet-name>
        <servlet-class>org.apache.jackrabbit.j2ee.RepositoryAccessServlet</servlet-class>
        <init-param>
            <param-name>bootstrap-config</param-name>
            <param-value>jackrabbit/bootstrap.properties</param-value>
        </init-param>
        <init-param>
          <param-name>repository.context.attribute.name</param-name>
          <param-value>javax.jcr.Repository</param-value>
        </init-param>
        <init-param>
            <param-name>repository-name</param-name>
            <param-value>jackrabbit.repository</param-value>
        </init-param>
        <!--
            JNDI environment variables for creating the initial context
            (all init parameters starting with java.naming.* will be added to the initial context environment).
        -->
        <!--
        <init-param>
            <param-name>java.naming.provider.url</param-name>
            <param-value>http://www.apache.org/jackrabbit</param-value>
        </init-param>
        <init-param>
            <param-name>java.naming.factory.initial</param-name>
            <param-value>org.apache.jackrabbit.core.jndi.provider.DummyInitialContextFactory</param-value>
        </init-param>
        -->
        <!--
            RMI url, if RMI remoting is needed
        -->

        <init-param>
            <param-name>rmi-uri</param-name>
            <param-value>///jackrabbit.repository</param-value>
        </init-param>

        <load-on-startup>3</load-on-startup>
    </servlet>
    <!-- ====================================================================== -->
    <!-- W E B D A V  S E R V L E T                                              -->
    <!-- ====================================================================== -->
    <servlet>
        <servlet-name>Webdav</servlet-name>
        <servlet-class>org.apache.jackrabbit.j2ee.SimpleWebdavServlet</servlet-class>

        <init-param>
            <param-name>resource-path-prefix</param-name>
            <param-value>/repository</param-value>
        </init-param>
        <!--
         <init-param>
             <param-name>missing-auth-mapping</param-name>
             <param-value>anonymous:anonymous</param-value>
             <description>
                 Defines how a missing authorization header should be handled.
                 1) If this init-param is missing, a 401 response is generated.
                    This is suiteable for clients (eg. webdav clients) for which
                    sending a proper authorization header is not possible if the
                    server never sent a 401.
                 2) If this init-param is present with an empty value,
                    null-credentials are returned, thus forcing an null login
                    on the repository.
                 3) If this init-param is present with the value 'guestcredentials'
                    java.jcr.GuestCredentials are used to login to the repository.
                 4) If this init-param has a 'user:password' value, the respective
                    simple credentials are generated.
             </description>
         </init-param>
         -->
        <!--
            Optional parameter to define the value of the 'WWW-Authenticate' header
        -->
         <init-param>
             <param-name>missing-auth-mapping</param-name>
             <param-value></param-value>
         </init-param>
        <init-param>
            <param-name>authenticate-header</param-name>
            <param-value>Basic realm="olog"</param-value>
        </init-param>
        <!--
            Parameter used to configure behaviour of webdav resources such as:
            - destinction between collections and non-collections
            - resource filtering
        -->
        <init-param>
            <param-name>resource-config</param-name>
            <param-value>/WEB-INF/config.xml</param-value>
        </init-param>
        <load-on-startup>4</load-on-startup>
    </servlet>
    <!-- ====================================================================== -->
    <!-- S E R V L E T   M A P P I N G                                          -->
    <!-- ====================================================================== -->
    <servlet-mapping>
        <servlet-name>RepositoryStartup</servlet-name>
        <url-pattern>/admin/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Webdav</servlet-name>
        <url-pattern>/repository/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ServletAdaptor</servlet-name>
        <url-pattern>/resources/*</url-pattern>
    </servlet-mapping>
    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
    <security-constraint>
        <display-name>Add or Modify Logs</display-name>
        <web-resource-collection>
            <web-resource-name>create / update / delete log(s)</web-resource-name>
            <description/>
            <url-pattern>/resources/logs/*</url-pattern>
            <http-method>PUT</http-method>
            <http-method>POST</http-method>
            <http-method>DELETE</http-method>
        </web-resource-collection>
        <auth-constraint>
            <description/>
            <role-name>LogMod</role-name>
            <role-name>Administrator</role-name>
        </auth-constraint>
        <user-data-constraint>
            <description/>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    <security-constraint>
        <display-name>Add or Modify Logbooks</display-name>
        <web-resource-collection>
            <web-resource-name>create / update / delete logbooks</web-resource-name>
            <description/>
            <url-pattern>/resources/logbooks/*</url-pattern>
            <http-method>PUT</http-method>
            <http-method>POST</http-method>
            <http-method>DELETE</http-method>
        </web-resource-collection>
        <auth-constraint>
            <description/>
            <role-name>LogbookMod</role-name>
            <role-name>LogMod</role-name>
            <role-name>Administrator</role-name>
        </auth-constraint>
        <user-data-constraint>
            <description/>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    <security-constraint>
        <display-name>Add or Modify Tags</display-name>
        <web-resource-collection>
            <web-resource-name>create / update / delete tags</web-resource-name>
            <description/>
            <url-pattern>/resources/tags/*</url-pattern>
            <http-method>PUT</http-method>
            <http-method>POST</http-method>
            <http-method>DELETE</http-method>
        </web-resource-collection>
        <auth-constraint>
            <description/>
            <role-name>TagMod</role-name>
            <role-name>LogbookMod</role-name>
            <role-name>LogMod</role-name>
            <role-name>Administrator</role-name>
        </auth-constraint>
        <user-data-constraint>
            <description/>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>
    <login-config>
        <auth-method>BASIC</auth-method>
        <realm-name>olog</realm-name>
    </login-config>
    <security-role>
        <description>May add or modify logs</description>
        <role-name>LogMod</role-name>
    </security-role>
    <security-role>
        <description>May add or modify logbooks</description>
        <role-name>LogbookMod</role-name>
    </security-role>
    <security-role>
        <description>May add or modify tags</description>
        <role-name>TagMod</role-name>
    </security-role>
    <security-role>
        <description>Directory administrator</description>
        <role-name>Administrator</role-name>
    </security-role>
    <resource-ref>
        <res-ref-name>UserTransaction</res-ref-name>
        <res-type>javax.transaction.UserTransaction</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    <resource-ref>
        <description>jdbc:mysql://localhost/irmisDB-Elog</description>
        <res-ref-name>jdbc/irmisDB-Elog</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
        <res-sharing-scope>Shareable</res-sharing-scope>
    </resource-ref>
    <error-page>
        <exception-type>org.apache.jackrabbit.j2ee.JcrApiNotFoundException</exception-type>
        <location>/error/classpath.jsp</location>
    </error-page>
    <error-page>
        <exception-type>javax.jcr.RepositoryException</exception-type>
        <location>/error/repository.jsp</location>
    </error-page>
</web-app>
